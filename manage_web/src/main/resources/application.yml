#spring:
#  application:
#    name: manage.web
#  servlet:
#    multipart:
#      max-file-size: 22MB # 单个上传文件的最大大小
#      max-request-size: 22MB
#  datasource:
#    druid:
#      url: jdbc:mysql://localhost:3306/test
#      username: root
#      password: 101423CEce
#      driver-class-name: com.mysql.cj.jdbc.Driver
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test
    username: root
    password: 101423CEce
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true

      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico

      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid
        login-password: druid
        # IP白名单
        allow: 127.0.0.1
        # IP黑名单（共同存在时，deny优先于allow）
        deny:

      keepAlive: true

      filter:
        # sql监控

        stat:
#          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
          connection-stack-trace-enable: true
          slow-sql-log-level: info
          # 防火墙
        wall:
          db-type: mysql
          config:
            delete-allow: false
            drop-table-allow: false

server:
  port: 80
#debug: true

#  表示在类路径下的 mapper 文件夹中查找所有的 .xml 文件。
#必须: 如果你的项目中使用了 XML 形式的 Mapper 文件（即定义了 Mapper XML 文件来写 SQL 语句），则需要配置。如果没有使用 XML 形式的 Mapper 文件，则可以不配置。
#解释: 指定 MyBatis-Plus 扫描的实体类的位置，这样可以在 Mapper XML 中使用简短的别名来引用实体类。
#示例: com.example.entity 表示在 com.example.entity 包下的所有类都可以作为 MyBatis 的别名使用。
#必须: 如果在 Mapper XML 文件中使用了简短的别名来引用实体类，则需要配置。如果没有使用 XML 形式的 Mapper 文件，或者没有使用别名，则可以不配置。
mybatis-plus:
  global-config:
    db-config:
#      自增id
      id-type: auto
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#  mapper-locations: classpath*:/mapper/*.xml
#  type-aliases-package: com.example.entity